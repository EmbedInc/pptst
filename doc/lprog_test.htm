<html>
<head>
<title>LProg Production Test</title>
</head>

<body background=backg.jpg>
<center><h1>LProg Production Test Procedure</h1>
Version 1.0, 17 Aug 2008
</center>

<p>This document describes the production test procedure for a LProg PIC
programmer.&nbsp;  The current production version of the LProg uses board
LPRG2, which is labeled on the back.&nbsp;  A complete unit looks like
this:&nbsp;

<p><center><img src=lprog_test/lprog2.jpg width=400 height=185></center>


<dl><!-- start list for main headings -->


<p><dt><h2>Version history</h2></dt><dd>
A new major version indicates major or incompatible changes from the
previous version.&nbsp;  A new minor version indicates clarifications,
text fixes, and minor compatible changes.&nbsp;

<dl><!-- start of list for Version History headings -->

<p><dt><h3>1.0, 17 Aug 2008</h3><dt><dd>
Copied from USBPROG_TEST and modified for LProg.&nbsp;

</dl><!-- End of version headings -->


<p><dt><h2>USBPROG_TEST Program</h2></dt><dd>
The USBPROG_TEST program automates parts of the production test of a LProg
and prompts the operator thru the steps.&nbsp;  The details of the
USBPROG_TEST program are described in the <a
href=usbprog_test_prog.txt>USBPROG_TEST_PROG</a> documentation file.&nbsp;
However, this program should not be run directly when used in
production.&nbsp;  It should only be run from the menu entry
<b>Programs</b> &gt; <b>Embed Inc</b> &gt; <b>Production tests</b> &gt;
<b>LProg</b> &gt; <b>Board test</b>.&nbsp;  This menu entry fills in the
command line options appropriately for testing a LProg.&nbsp;


<p><dt><h2>Tester Setup</h2></dt><dd>
Before testing, it must be ensured that the tester is set up for the type
of programmer being tested.&nbsp;  This is described in the documentation
file <a href=picprg_test.htm>PICPRG_TEST</a>.&nbsp;  No action may be
required if the tester was last used to test the same type of programmer,
but this should be verified.&nbsp;

<p>Make sure the tester is powered up.&nbsp;  The tester is implemented on
a Embed Inc ReadyBoard-01, which can take a range of input power
voltages.&nbsp;  See the <a
href=http://www.embedinc.com/products/ready01>ReadyBoard-01</a> product
description for details.&nbsp;


<p><dt><h2>Test Procedure</h2></dt><dd>
The USBPROG_TEST program will briefly indicate each step in the test
process.&nbsp;  This section describes each step in detail.&nbsp;

<p>The steps are:

<dl><!-- start of individual steps -->

<p><dt><h3>Indicate the tool programmer</h3><dt><dd>
The USBPROG_TEST program must know which programmer it is to use as the
tool for programming the PIC in the target unit.&nbsp;  It is assumed that
the tool is a previously tested and fully operational USBProg or
USBProg2.&nbsp;  Each such programmer has a unique name, and this step
lets the program know the name of the particular USBProg to use.&nbsp;

When first run, the program writes:

<p><pre>Serial number of programmer used as tool:</pre>

<p>First make sure the tool programmer is connected to the USB, then enter
its serial number.&nbsp;  The serial number of each USBProg is indicated
in the lower right corner of the PC board.&nbsp;  Other programmers may be
labeled in different locations.&nbsp;  The command <a
href=picprg_list.txt>PICPRG_LIST</a> will list the names of all compatible
plug-and-play programmers connected to the system.&nbsp;  The serial
number is included in the factory default name of each unit.&nbsp;

<p>After the serial number is entered, the program will query the tool
programmer, then indicate its name and firmware version.&nbsp;  In this
example, the programmer serial number is 339:

<p><pre>Tool programmer is USBProg "USBProg0339", firmware version 20.</pre>

<p><dt><h3>Program the PIC</h3><dt><dd>
The program now prompts:

<p><pre>



----------------------------------------
Starting new test:

Hold the programming cable into the pads in the far left corner of the board.
Press ENTER to continue:</pre>

<p>Before continuing, the programming cable from the tool programmer must
be held into the pads at the far left corner of the circuit board, as
shown here:&nbsp;

<p><center><img src=lprog_test/lprog_t1.jpg width=600 height=450></center>

<p>No connector is installed in these pads.&nbsp;  To connect to them,
install the header on the end of the cable that would normally be soldered
into the holes for the connector.&nbsp;  Push the cable at an angle to
ensure that all pins are connecting to their pads, as can be seen in this
closeup:&nbsp;

<p><center><img src=lprog_test/lprog_t2.jpg width=510 height=450></center>

<p>Note the orientation is so that the header key is towards the edge of
the circuit board.&nbsp;  There is no indication of the key orientation on
the circuit board.&nbsp;

<p>Press ENTER once the cable is being held firmly into the connector
pads.&nbsp;  The program output will be similar to:

<p><pre>Firmware is type USBProg version 20 by Embed Inc.
Programmer name is "USBProg0339".
The target chip type is 18F2550 revision 2.
Erasing the target chip.
Writing to program memory.
Writing to non-volatile data memory.
Writing to ID and other locations.
Performing verification at 4.50 volts.
Performing verification at 5.50 volts.
Writing and verifying the configuration bits.
No errors.  Elapsed time was 12.5 seconds.</pre>

<p><dt><h3>Connect the unit to the USB</h3><dt><dd>
The program now prompts:

<p><pre>Connect the unit under test to the USB.
Press ENTER to continue:</pre>

<p>Connect the target programmer to the USB of the same computer that is
running the test program.&nbsp;  The LED should light dimly:&nbsp;

<p><center><img src=lprog_test/lprog_t3.jpg width=600 height=255></center>

<p>Press ENTER once the USB is connected to the target programmer and the
LED lights.&nbsp;

<p><dt><h3>Test the newly programmed unit</h3><dt><dd>
The program now prompts:

<p><pre>Hold the 8 pin test header into the programming output pads of the unit under
test.
When the tests have completed, remove the test header and press ENTER:</pre>

<p>The target unit has been programmed and its operation will be tested in
this step.&nbsp;  To perform the tests, hold the 8 pin header into the 8
pads at the right end of the LProg.&nbsp;  Note that the wires from the 2
pin header on the tester connect to the top two pads on the LProg.&nbsp;
These are the black and white wires in the picture below.&nbsp;

<p>Hold the header at a angle to ensure all the pins are making contact
with their pads:&nbsp;

<p><center><img src=lprog_test/lprog_t5.jpg width=480 height=450></center>

<p>The tests will start automatically once the connection is made.&nbsp;
While performing tests, the test setup should look like:&nbsp;

<p><center><img src=lprog_test/lprog_t4.jpg width=600 height=450></center>

<p>When the tester discovers the programmer is connected, it performs a
sequence of tests.&nbsp;  Each different test is indicated by a unique
pattern displayed on the LEDs of the tester.&nbsp;  Each test takes only a
part of a second, so the LEDs will change rapidly as the tests are
performed.&nbsp;  When all tests pass, all the high LEDs are lit.&nbsp; If
a test fails, the display freezes with the pattern for that test until the
target programmer is disconnected.&nbsp;  The suite of tests takes less
than 2 seconds to perform.&nbsp;

<p>After the tests have completed, remove the header and then press
ENTER.&nbsp;  The program will query the unit under test whether it passed
or not and display the result.&nbsp;  If the unit passed all test, the
program output will look similar to:&nbsp;

<p><pre>Assigning serial number 0004.

********** UNIT PASSED **********



----------------------------------------
Starting new test:

Hold the programming cable into the pads in the far left corner of the board.
Press ENTER to continue:</pre>

<p><dt><h3>Finished</h3><dt><dd>
This unit is now finished.&nbsp;  Proceed with the next unit by
programming the PIC as indicated by the test program.&nbsp;  The test
program will automatically assume a new unit is to be tested after
completing the previous unit.&nbsp;  To exit the test program, press
CTRL-C.&nbsp;

</dl><!-- end of individual steps -->

</body></html>
